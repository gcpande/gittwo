package com.gchandra.mytest;

import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.navigation.fragment.NavHostFragment;

import com.gchandra.mytest.databinding.FragmentRegisterBinding;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FieldValue;
import com.google.firebase.firestore.FirebaseFirestore;

import java.util.HashMap;
import java.util.Map;


public class RegisterFragment extends Fragment {
    private FragmentRegisterBinding binding;
     FirebaseFirestore db = FirebaseFirestore.getInstance();
    public static String t1;

    public RegisterFragment() {
        // Required empty public constructor
    }


    public static RegisterFragment newInstance(String param1, String param2) {
        RegisterFragment fragment = new RegisterFragment();
        Bundle args = new Bundle();

        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

    }

    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        binding = FragmentRegisterBinding.inflate(inflater, container, false);
        return binding.getRoot();

    }

    public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        binding.buttonPrevious.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                NavHostFragment.findNavController(RegisterFragment.this)
                        .navigate(R.id.action_registerFragment_to_nav_users);
            }
        });
        binding.buttonAdd.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                addUser();
            }
        });
        Log.d("3A", "RegisterFragment onViewCreated  ");
    }

    public void addUser() {
        String t1 = binding.editName.getText().toString();
        String t2 = binding.editAddress.getText().toString();
        String t3 = binding.editMobile.getText().toString();
         tring t4 = binding.editEmail.getText().toString();
        if (t1.isEmpty() || t2.isEmpty() || t3.isEmpty() || t4.isEmpty()) {
            Message.message(getContext(), "ALL FIELDS ARE MANDATORY");
        } else {

            User1 tempContact = new User1(t1, t2, t3, t4);
            Log.d("3A", "RegisterFragment afterContact   " + tempContact.getid() + tempContact.getname() + tempContact.getaddress());

            Message.message(getContext(), t1 + "  your details are saved ");
           
            //  firestore  add data
            // Create a new user
            Map<String, User1> user = new HashMap<>();

            user.put(t1, tempContact);
            Log.d("3A", "tempContact put in map with key :" + t1);


// Add a new document with a generated ID
            db.collection("users").document(t1)
                    .set(user)
                    .addOnSuccessListener(new OnSuccessListener<Void>() {
                        @Override
                        public void onSuccess(Void aVoid) {
                            Log.d("3A", "DocumentSnapshot successfully written!");
                        }
                    })
                    .addOnFailureListener(new OnFailureListener() {
                        @Override
                        public void onFailure(@NonNull Exception e) {
                            Log.w("3A", "Error writing document", e);
                        }
                    });
            DocumentReference docuRef = db.collection("users").document(t1);

            // Atomically increment the id of the city by 1.
            docuRef.update(String.valueOf(getId()), FieldValue.increment(1));

            binding.editName.setEnabled(false);
            binding.editAddress.setEnabled(false);
            binding.editMobile.setEnabled(false);
            binding.editEmail.setEnabled(false);
            binding.buttonAdd.setEnabled(false);
        }
    }


    @Override
    public void onDestroyView() {
        super.onDestroyView();
        binding = null;
    }

}